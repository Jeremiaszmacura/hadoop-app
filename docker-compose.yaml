version: '3.8'

services:

  # hadoop-app-mongodb:
  #   image: mongo
  #   container_name: hadoop-app-mongodb
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${DATABASE_ADMIN_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_ADMIN_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${DATABASE_NAME}
  #   env_file: 
  #   - .env
  #   ports:
  #     - '27017-27019:27017-27019'
  #   volumes: 
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - ./mongo-data:/data/db
  #   networks:
  #     - flask-hadoop-app-network
  #   restart: always

  # hadoop-app-mongo-express:
  #   image: mongo-express
  #   container_name: hadoop-app-mongo-express
  #   ports:
  #     - 8080:8081
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=${DATABASE_DOCKER_HOST}
  #     - ME_CONFIG_MONGODB_PORT=${DATABASE_PORT}
  #     - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
  #     - ME_CONFIG_MONGODB_AUTH_DATABASE=${DATABASE_NAME}
  #     - ME_CONFIG_MONGODB_AUTH_USERNAME=${DATABASE_USERNAME}
  #     - ME_CONFIG_MONGODB_AUTH_PASSWORD=${DATABASE_PASSWORD}
  #     - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
  #   env_file: 
  #     - .env
  #   networks:
  #     - flask-hadoop-app-network
  #   depends_on:
  #     - hadoop-app-mongodb
  #   restart: always

  flask-hadoop-app:
    image: flask-hadoop-app
    container_name: flask-hadoop-app
    build:
      context: .
      dockerfile: ./app.Dockerfile
    ports:
      - 5000:5000
    environment:
      FLASK_DEBUG: 'True'
      DATABASE_URI: ${DEV_DATABASE_URI}
      BACKUP_DATABASE_URI: ${BACKUP_DATABASE_URI}
    networks:
      - flask-hadoop-app-network
    restart: on-failure
    depends_on:
      - hadoop-app-mongodb
    deploy:
      replicas: 1

  hadoop-app:
    image: hadoop-app
    container_name: hadoop-app
    build:
      context: .
      dockerfile: ./hadoop.Dockerfile
    ports:
      - 8088:8088
    networks:
      - flask-hadoop-app-network
    restart: on-failure
    deploy:
      replicas: 1

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok
    ports:
      - "4040:4040"
    networks:
      - flask-hadoop-app-network
    env_file: .env
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: ["http", "flask-hadoop-app:5000"]

networks:
    flask-hadoop-app-network:
      driver: bridge
      name: flask-hadoop-app-network
